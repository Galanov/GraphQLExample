// <auto-generated />
using System;
using GraphQL.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GraphQL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20201017202702_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GraphQL.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6e9ccf55-10d5-4423-80ee-d7e3a92a9edd"),
                            Description = "Cash account for our users",
                            OwnerId = new Guid("d8c1f283-5742-49e8-bc31-d1fb4025bd37"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("79134bd5-649c-44b9-93d3-b1754dfdbdd0"),
                            Description = "Savings account for our users",
                            OwnerId = new Guid("1cc04911-2ef8-4eaa-a53a-4b2c632836c4"),
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("2808521f-17a0-407e-ab0e-8edfa156f2e1"),
                            Description = "Income account for our users",
                            OwnerId = new Guid("1cc04911-2ef8-4eaa-a53a-4b2c632836c4"),
                            Type = 3
                        });
                });

            modelBuilder.Entity("GraphQL.Entities.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d8c1f283-5742-49e8-bc31-d1fb4025bd37"),
                            Address = "John Doe's address",
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = new Guid("1cc04911-2ef8-4eaa-a53a-4b2c632836c4"),
                            Address = "Jane Doe's address",
                            Name = "Jane Doe"
                        });
                });

            modelBuilder.Entity("GraphQL.Entities.Account", b =>
                {
                    b.HasOne("GraphQL.Entities.Owner", "Owner")
                        .WithMany("Accounts")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
